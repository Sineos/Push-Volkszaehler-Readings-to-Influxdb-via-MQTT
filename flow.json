[{
	"id": "6c6ac98.de89a38",
	"type": "websocket-client",
	"z": "289f42f0.c21fd6",
	"path": "ws://192.168.178.8:8082/socket",
	"wholemsg": "false"
},
{
	"id": "b80257e5.fd48e8",
	"type": "mqtt-broker",
	"z": "289f42f0.c21fd6",
	"broker": "192.168.178.8",
	"port": "1883",
	"clientid": "node_red",
	"usetls": false,
	"verifyservercert": true,
	"compatmode": false,
	"keepalive": "60",
	"cleansession": true,
	"willTopic": "",
	"willQos": "0",
	"willRetain": null,
	"willPayload": "",
	"birthTopic": "",
	"birthQos": "0",
	"birthRetain": null,
	"birthPayload": ""
},
{
	"id": "3233252c.1e405a",
	"type": "debug",
	"z": "289f42f0.c21fd6",
	"name": "",
	"active": false,
	"console": "false",
	"complete": "payload",
	"x": 450,
	"y": 220,
	"wires": []
},
{
	"id": "47ac2f31.a7e5b",
	"type": "mqtt out",
	"z": "289f42f0.c21fd6",
	"name": "Push to Mosquitto",
	"topic": "",
	"qos": "0",
	"retain": "false",
	"broker": "b80257e5.fd48e8",
	"x": 170,
	"y": 300,
	"wires": []
},
{
	"id": "8d102a91.70cc3",
	"type": "debug",
	"z": "289f42f0.c21fd6",
	"name": "",
	"active": false,
	"console": "false",
	"complete": "payload",
	"x": 370,
	"y": 140,
	"wires": []
},
{
	"id": "307579b2.b17a16",
	"type": "function",
	"z": "289f42f0.c21fd6",
	"name": "Format payload for influxdb",
	"func": "/* Parses Json and formats data to be send to influxdb via \n*  telegraf mqtt plugin\n*  topic = topic used for mqtt\n*  measurement = measurement in influxdb\n*  tagX = tag information in influxdb\n*/\n\nvar uuidMap = {\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/sml/Leistung',\n\t\tmeasurement:'power_sml',\n\t\ttag1:'Type=sml',\n        tag2:'Location=Leistung'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/sml/Bezug',\n\t\tmeasurement:'power_sml',\n\t\ttag1:'Type=sml',\n        tag2:'Location=Bezug'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/sml/Lieferung',\n\t\tmeasurement:'power_sml',\n\t\ttag1:'Type=sml',\n        tag2:'Location=Lieferung'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/s0/pv',\n\t\tmeasurement:'power_s0',\n\t\ttag1:'Type=s0',\n        tag2:'Location=pv'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/s0/og',\n\t\tmeasurement:'power_s0',\n\t\ttag1:'Type=s0',\n        tag2:'Location=og'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/s0/eg',\n\t\tmeasurement:'power_s0',\n\t\ttag1:'Type=s0',\n        tag2:'Location=eg'\n    },\n    'XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX':{\n        topic:'/power/s0/ug',\n\t\tmeasurement:'power_s0',\n\t\ttag1:'Type=s0',\n        tag2:'Location=ug'\n    }\n}; \n\n\nvar myJsonObj = [];\nvar myJsonObj = JSON.parse(msg.payload);\nvar myData = [];\n\nvar myUuid = myJsonObj.data.uuid;\nvar myTimestamp = myJsonObj.data.tuples[0][0];\nvar myValue = myJsonObj.data.tuples[0][1];\n\n\nvar MyOutput = {};\nMyOutput.topic = uuidMap[myUuid]['topic'];\nMyLine1 = uuidMap[myUuid]['measurement'] + \",\" + uuidMap[myUuid]['tag1'] + \",\" + uuidMap[myUuid]['tag2'];\nMyLine2 = \"value=\" + myValue + \" \" + (myTimestamp*1000000);\nMyOutput.payload = MyLine1 + \" \" + MyLine2;\nreturn MyOutput;\n\t",
	"outputs": 1,
	"noerr": 0,
	"x": 200,
	"y": 220,
	"wires": [["3233252c.1e405a",
	"47ac2f31.a7e5b"]]
},
{
	"id": "fb6af328.b2b1",
	"type": "websocket in",
	"z": "289f42f0.c21fd6",
	"name": "Connect to VZ push-server",
	"server": "",
	"client": "6c6ac98.de89a38",
	"x": 130,
	"y": 140,
	"wires": [["8d102a91.70cc3",
	"307579b2.b17a16"]]
}]